
var chat_ref=new Firebase("https://incandescent-fire-5373.firebaseio.com/chat");
var chat=new Firechat(chat_ref);


/*Function: chat_init
* -----------------------
* Parameter:
* 1. token : a alphanumeric string
* 2. supplier : object(id,name)
* Purpose :Initiate chat functionlity
* Action: 
* This is main function which authenticates user 
* and makes him online and loads rest all functionality 
*/

function chat_init(token,supplier,roomurl,purposalId)
{
    supplier.name=supplier.name.toLowerCase();

    /*authenticate user*/
	chat_ref.auth(token,function(e,u)
	{
		if(e) /*if something went wrong*/
		{
			console.log(e);
		}
		else /*successful login*/
		{
			/*to make user online*/
			chat.setUser(u.auth.id,u.auth.name,u.auth.type,function()
			{
                /*user is online*/
                /* track supplier status : online or offline */
                chat._usersOnlineRef.child(supplier.name).on('value',function(s)
                {
                    //start loader say connecting 
                    if(s.val()==null)// if suppplier went offline
                    {

                        /*set status*/
                        $('#chat-box .status>i').html(supplier.name+' is offline');
                        
                        /*set grey dot*/
                        var $dot=$('#chat-box .panel-title>i')

                        if($dot.hasClass('text-success'))
                        {
                            $dot.removeClass('text-success');
                        }
                        
                        $dot.addClass('text-default');  
                    }
                    else /* if user went online*/
                    {
                        // hide loader say connected

                         /*status*/
                         $('#chat-box .status>i').html('');

                         /*set green dot*/
                         $('#chat-box .panel-title>i').removeClass('text-default')
                                                        .addClass('text-success');
                    }
                });

                
                /*load chat functionality*/
                
                /*room functionlity*/
                checkRoom(supplier,purposalId,roomurl);

                /*update current user offline time*/
                chat._userRef.onDisconnect()
                            .update({'offline_time':Firebase.ServerValue.TIMESTAMP});

            });/*user */
            
        }

    });
}

/*Function: checkRoom()
* -----------------------
* Parameter:
* 1. supplier : object(id,name)
* Purpose :Initiate room functionlity
* Action: 
* This function decides either to create room or to load room from database.
*/

function checkRoom(supplier,purposalId,roomurl)
{
   

    $.ajax(
    {
        url:roomurl,
        type:'post',
        dataType:"json",
        data:"proposalId="+purposalId+"&action=getroom",
        success:function(data)
        {
            
			console.log("data " + data.success.room);
			var d={
				"room":""
			};
			d.room= data.success.room;
            if(d.room==false) /*if room not exist*/
            {
                 /*then create room*/
                chat.createRoom("test","private",function(room_id)
                {  
                    //console.log("room created");
                    /*update database */
					
                    $.ajax(
                    {
                        url:roomurl,
                        type:'post',
                        dataType:"json",
                        data:"room="+room_id+"&proposalId="+purposalId+"&action=setroom",
                        success:function(d)
                        {
							console.log("set room : "+ JSON.stringify(d));
							if(!d.iserror){
								if(d.success==true)
								{
									/*put current user in this room*/
									chat.enterRoom(room_id);
									console.log("chat roomm enter");
									/*call supplier  to this room*/
									chat.inviteUser(supplier.id,room_id);

									$('#chat-box').data("room");

									read(room_id);

									/*load reading functionality*/
									offlineMessagesCount(room_id,supplier);
									trackTyping(room_id,supplier);  

								}
							}else
							{
								console.log("Server error ");
							}
                        }
                    });
                });
            }
            else /*if room is there*/
            {
                chat.enterRoom(d.room);
                $('#chat-box').data("room",d.room);
                read(d.room);
                offlineMessagesCount(d.room); 
                trackTyping(d.room,supplier);  
            }
        }
    });
}


/*
* Function offlineMessageCount
* --------------------
* Parameters
* 1. room : a alphanumeric string
* Purpose:
* To count how many messages current user
* has recieved for a particuler chat during 
* his or her offline time period
*/

function offlineMessagesCount(room)
{
        var ot=chat._user.offline_time;
        if(ot)
        {
            chat._messageRef.child(room)
                            .startAt(ot)
                            .endAt(new Date().getTime())
                            .once('value',function(s){
                                if(s.numChildren()==0)
                                {
                                    $('#chat-box .badge').html('');
                                }
                                else
                                {
                                    $('#chat-box .badge').html(s.numChildren());
                                }
                                
                            });
        }
    
}
/*
* Function trackTyping
* --------------------
* Parameters
* 1. room : a alphanumeric string
* 2. supplier : a object(id,name)
* Purpose:
* To track whether supplier is typing or not
*/
function trackTyping(room,supplier)
{
    console.log("type tracking"+ room+"  "+JSON.stringify(supplier));
    /*track typing status*/
	
    chat._firebase.child("room-users").child(room).child(supplier.id).on('child_changed',function(s)
    {
        if(s.val())
        {
            $('#chat-box .status>i').html(supplier.name + ' is typing..');
        }
        else
        {
            $('#chat-box .status>i').html('');
        }
       
    });
}


/*to handle chat-box functionality*/
$('#chat-box').delegate(".message","keypress",function(e)
{
    roomid=$('#chat-box').data("room");
    if(e.keyCode==13) /*if enter is pressed*/
    {

        //take content & send it
        if($(this).val()!=='')
        {
             chat.sendMessage(roomid,$(this).val());
             $(this).val('');
             chat._firebase.child("room-users").child(roomid).child(chat._user.id).update({'_typing':false});
        }

    }
    else
    {
        chat._firebase.child("room-users").child(roomid).child(chat._user.id).update({'_typing':true});
    }

});

$('#chat-box').delegate(".send","click",function(e)
{
    //grab content of message
    var $mb=$(this).parent().siblings();
    if($mb.val()!=='')
    {
        
        roomid=$('#chat-box').data("room");
        chat.sendMessage(roomid,$mb.val());
        $mb.val('');
        chat._firebase.child("room-users").child(roomid).child(chat._user.id).update({'_typing':false});
    }
});

/*
* Function read()
* ------------------
* Parameters
* 1. room : a alphanumeric string
* Purpose:
* To load the message from firebase and display it 
* into chat box
*/
function read(room)
{
    chat._messageRef.child(room).on('child_added',function(s)
    {

        console.log("message-recieved");
        message_object=s.val();
        console.log(message_object);

        timestamp=new Date(message_object.timestamp);
        /*if it it current user*/
        if(chat._user.id==message_object.userId)
        {
            
            $('#chat-box .media-list').append('<li class="media media-right">'
                                                +'<a href="javascript:void(0);" class="media-object">'
                                                +'  <img src="'+chat._user.image+'" class="img-circle" alt="">'
                                                +'</a>'
                                                +'<div class="media-body">'
                                                +'  <p class="media-text" title="'+timestamp.toTimeString()+'">'+message_object.message+'</p>'
                                                +'  <span class="clearfix"></span>'
                                                +'  <p class="media-meta">'+timestamp.toDateString()+'</p>'
                                                +'<div>'
                                               +'</li>')
        }
        else
        {
             $('#chat-box .media-list').append('<li class="media">'
                                                +'<a href="javascript:void(0);" class="media-object">'
                                                +'  <img src="'+message_object.image+'" class="img-circle" alt="">'
                                                +'</a>'
                                                +'<div class="media-body">'
                                                +'  <p class="media-text" title="'+timestamp.toTimeString()+'">'+message_object.message+'</p>'
                                                +'  <span class="clearfix"></span>'
                                                +'  <p class="media-meta">'+timestamp.toDateString()+'</p>'
                                                +'<div>'
                                               +'</li>')
        }
        // hide loader and say messages loaded 

        /*scroll down*/
        $('#chat-box .media-list').scrollTop($('#chat-box .media-list')[0].scrollHeight);
    });

}

/*Funtion logout
 *----------------
 *This function logout user from Firebase
 * parameter description
 * Action perfprmed description
 * Purpose

 */
function logout()
{
	chat_ref.unauth();
    window.location.pathname='/chat/demo3/signout';
}